import React, { useRef } from 'react';
import FilterCSS from './filter.module.css';
import { FilterValue } from '../typemodule/types';

// –º–æ–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ
//const Filter: React.FC<TypeForFC> = ({ changeFilter }) => {
const Filter: React.FC<{ changeFilter: (value: string) => void }> = ({
  changeFilter,
}) => {
  // value
  let value = useRef<HTMLSelectElement>(null);

  let change = () => {
    if (value && value.current) {
      changeFilter(value.current.value);
    }
  };

  /**
   * –°–µ–π—á–∞—Å —Ç–∞–∫–æ–π warning –µ—Å—Ç—å, –ø–æ–ø—Ä–æ–±—É–π –ø–æ–Ω—è—Ç—å –ø–æ—á–µ–º—É –æ–Ω–æ —Ç–∞–∫ –∏ –∫–∞–∫ —ç—Ç–æ –ø–æ–ø—Ä–∞–≤–∏—Ç—å üòÄ
   * react-dom.development.js:86 Warning: Use the `defaultValue` or `value` props on <select> instead of setting `selected` on <option>.
   */
  //–ò—Å–ø—Ä–∞–≤–∏–ª –ø–æ—Ç–æ–º—É —á—Ç–æ —Ä–µ–∞–∫—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç defoultValue –≤–º–µ—Å—Ç–æ selected –∏ –¥–µ—Ñ–æ—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–π –æ–ø—Ü–∏–µ–π!
  return (
    <div className={FilterCSS.filter_block}>
      <select
        ref={value}
        onChange={change}
        className={FilterCSS.filter}
        defaultValue={FilterValue.ALL}>
        <option id="1" value={FilterValue.ALL}>
          –í—ã–±—Ä–∞—Ç—å –≤—Å–µ{' '}
        </option>
        <option id="2" value={FilterValue.ALLACTIVE}>
          {' '}
          –í—ã–±—Ä–∞—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ{' '}
        </option>
        <option id="3" value={FilterValue.ALLINACTIVE}>
          –í—ã–±—Ä–∞—Ç—å –∑–∞–∫–æ–Ω—á–µ–Ω–Ω—ã–µ
        </option>
      </select>
    </div>
  );
};
export default Filter;
